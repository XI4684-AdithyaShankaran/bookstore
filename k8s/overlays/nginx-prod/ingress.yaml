apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bkmrk-ingress
  namespace: bookstore
  annotations:
    # Nginx Ingress Controller
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"

    # SSL/TLS configuration
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    kubernetes.io/tls-acme: "true"

    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"

    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Performance optimizations
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
spec:
  tls:
    - hosts:
        - bkmrk.example.com # Replace with your domain
      secretName: bkmrk-tls
  rules:
    - host: bkmrk.example.com # Replace with your domain
      http:
        paths:
          # Frontend routes (React app)
          - path: /(.*)
            pathType: Prefix
            backend:
              service:
                name: frontend
                port:
                  number: 80

          # Backend API routes (FastAPI)
          - path: /api(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: backend
                port:
                  number: 80

          # MCP Server routes (AI Recommendation Engine)
          - path: /mcp(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: mcp-server
                port:
                  number: 8001

          # Analytics Server routes (RAGAS Analytics)
          - path: /analytics(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: analytics-server
                port:
                  number: 8002

          # Health check routes
          - path: /health
            pathType: Exact
            backend:
              service:
                name: backend
                port:
                  number: 80

          # API documentation
          - path: /docs(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: backend
                port:
                  number: 80

          # Weaviate routes (Vector Database)
          - path: /weaviate(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: weaviate
                port:
                  number: 8080
