version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: bkmrk-postgres
    environment:
      POSTGRES_DB: bookstore
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d bookstore"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: bkmrk-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Weaviate Vector Database
  weaviate:
    image: semitechnologies/weaviate:1.22.4
    container_name: bkmrk-weaviate
    ports:
      - "8080:8080"
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: /var/lib/weaviate
      DEFAULT_VECTORIZER_MODULE: text2vec-openai
      ENABLE_MODULES: text2vec-openai
      CLUSTER_HOSTNAME: node1
      OPENAI_APIKEY: ${OPENAI_API_KEY:-your-openai-api-key-here}
    volumes:
      - weaviate_data:/var/lib/weaviate
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/.well-known/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API (FastAPI)
  backend:
    build: ./backend
    container_name: bkmrk-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/bookstore
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - WEAVIATE_URL=http://weaviate:8080
      - GEMINI_API_KEY=${GEMINI_API_KEY:-your-gemini-api-key-here}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your-openai-api-key-here}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      weaviate:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MCP Server (AI Recommendation Engine)
  mcp-server:
    build:
      context: ./backend
      dockerfile: Dockerfile.mcp
    container_name: bkmrk-mcp-server
    ports:
      - "8001:8001"
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY:-your-gemini-api-key-here}
      - WEAVIATE_URL=http://weaviate:8080
      - WEAVIATE_API_KEY=${WEAVIATE_API_KEY:-your-weaviate-api-key-here}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your-openai-api-key-here}
    depends_on:
      weaviate:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Analytics Server (RAGAS Analytics)
  analytics-server:
    build:
      context: ./backend
      dockerfile: Dockerfile.analytics
    container_name: bkmrk-analytics-server
    ports:
      - "8002:8002"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your-openai-api-key-here}
    volumes:
      - analytics_data:/app/analytics
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/analytics/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (Next.js)
  frontend:
    build: ./frontend
    container_name: bkmrk-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_MCP_SERVER_URL=http://localhost:8001
      - NEXT_PUBLIC_ANALYTICS_URL=http://localhost:8002
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PgAdmin (Database Management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: bkmrk-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@bookstore.com
      PGADMIN_DEFAULT_PASSWORD: adminpass
    ports:
      - "5050:80"
    depends_on:
      - postgres

volumes:
  postgres_data:
  redis_data:
  weaviate_data:
  analytics_data:
